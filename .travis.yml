language: android
jdk: oraclejdk8
sudo: required

env:
  matrix:
    #- ANDROID_API=24 ANDROID_ABI=armeabi-v7a
    - ANDROID_API=22 ANDROID_ABI=armeabi-v7a NEED_UPLOAD_APK=true
    - ANDROID_API=19 ANDROID_ABI=armeabi-v7a
    - ANDROID_API=15 ANDROID_ABI=armeabi-v7a
    - ANDROID_API=11 ANDROID_ABI=armeabi
  global:
    - secure: Kq5NpWlyXvAvzZ5UUwAxtooG7Cwtdnzh1fhCNqE2Lx2441w9aEGntd5+ffCCTCF4orRHlFIbqfE4/D1YlH6cJtP9hW37SPI8swe3r6Zyfjftakbe3ld72bVfq0f2zx5T4zln63jppMs+XxKNYjg8UswC+9C8Vi2LeJdPUC/Zdzs=
    - secure: X6INcg26b1Bm48QDfDDhLnbRJm5tOffr+AWVcXkgaSbYybqPvYQmSLX7ai1ArCzDgTYqz12tUTVLgrgMlsXkQGFj41hoD+IEtO9zJOmHdtwUDkkh4yVvNwoJ7TTT/N7wL7ZAU556khWy76sS7/biv4iPohCy//R91LWki2d1240=
    - secure: WusDaL9feBHMAz/DydbMngPkSvVMxnKnkrJgXi+LuG3FuWEA5fgDIdEgB3mADUCQZRuNYUJ61H7nUYFttPZ1yZOe107ETDCk0/UpIJ7PzPr62v7uVNyqPijVBufHI9iJ+bxyVW3Nt4reocJ3yqRxwP0z9FV+aEsn8Ke1S8YaKzU=
    - secure: "OOkn4n5DHotc4o2sm0Fgq6oJltCSmhIBnjYVgz0rM3FJ5UiQxQRSpmhff+FnDIdcjHkNgUDu94RqivmvFwFZdYM70iuJoHk89ycR8yqTG4k7yNLOrsBWizKrpQSn5IVrCB6R8S5nMqH8Y8tZyfKlHelHn+EeUNWwhC2Yh9fsozg="
    - secure: "dMclH+XjGGpjc5q7DOAoROyLY1L6cBsVGXS3RIq9LaAyZ23jnhrb6P8rvEqagBO/6pU0DnHfEt3NDWiTjdKcXlezKwufiZReVGBxFRhvPkExU64Sxrk2+ACWinNbuTtsgPraN7OTkDxi2CgVYq1lAHME54Qv9Fg2vN3HfqyQgxo="
    - REPO="RandoApp/Rando-android"
    - DOWNLOADS_HOME=$HOME/downloads
    - APPS_HOME=$HOME/apps
    - CI_HOME=$HOME/build/$REPO

android:
  components:
    - tools
    - build-tools-25.0.2
    - platform-tools
    - tools
    - android-25
    - extra-android-m2repository
    - extra-google-m2repository
    - android-$ANDROID_API
    - sys-img-armeabi-v7a-android-$ANDROID_API
  licenses:
    - 'android-sdk-preview-license-.+'
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'
    - '.*intel.+'
git:
  depth: 3
# Not working for public repositories :(
cache:
  - apt
  - directories:
    - $HOME/.m2
    - $HOME/.gradle
    - $DOWNLOADS_HOME
    - ${TRAVIS_BUILD_DIR}/gradle/caches/
    - ${TRAVIS_BUILD_DIR}/gradle/wrapper/dists/

before_install:
  # Install lftp for apk upload:
  - sudo apt-get update -qq
  - sudo apt-get install -qq lftp
  # Install tree for directory structure debug
  #- sudo apt-get install -qq tree

  # Install base Android SDK
  - cd ${HOME}
  - if [ ! -d $DOWNLOADS_HOME ]; then mkdir $DOWNLOADS_HOME; fi

  # Install Gradle
  - if [ ! -f $DOWNLOADS_HOME/gradle.zip ]; then  wget http://services.gradle.org/distributions/gradle-2.14.1-bin.zip -O $DOWNLOADS_HOME/gradle.zip > /dev/null; fi
  - if [ ! -d $APPS_HOME/gradle-2.14.1 ]; then unzip --qq $DOWNLOADS_HOME/gradle.zip -d $APPS_HOME; fi
  - export GRADLE_HOME=$APPS_HOME/gradle-2.14.1
  - export PATH=$GRADLE_HOME/bin:$PATH

  # Install NDK
  #- cd $DOWNLOADS_HOME
  #- if [ ! -f $DOWNLOADS_HOME/android-ndk.zip ]; then  wget https://dl.google.com/android/repository/android-ndk-r11c-linux-x86_64.zip -O $DOWNLOADS_HOME/android-ndk.zip > /dev/null; fi
  #- if [ ! -d $APPS_HOME/android-ndk-r11c ]; then unzip -qq android-ndk.zip -d $APPS_HOME; fi
  #- export ANDROID_NDK_HOME=$APPS_HOME/android-ndk-r11c
  #- export PATH=$ANDROID_NDK_HOME/bin:$PATH

before_script:
#Clean up some space
  - sdkmanager --list || true
  - sdkmanager --uninstall "system-images;android-16;default;armeabi-v7a"
  - sdkmanager --uninstall "system-images;android-17;default;armeabi-v7a"
  - sdkmanager --uninstall "system-images;android-18;default;armeabi-v7a"
  - sdkmanager --uninstall "system-images;android-21;default;armeabi-v7a"
  - sdkmanager --uninstall "extras;google;google_play_services"
  - sdkmanager --uninstall "extras;android;support"
  - sdkmanager --uninstall "platforms;android-10"
  - sdkmanager --uninstall "platforms;android-15"
  - sdkmanager --uninstall "platforms;android-16"
  - sdkmanager --uninstall "platforms;android-17"
  - sdkmanager --uninstall "platforms;android-18"
  - sdkmanager --uninstall "platforms;android-19"
  - sdkmanager --uninstall "platforms;android-20"
  - sdkmanager --uninstall "platforms;android-21"
  - sdkmanager --uninstall "build-tools;21.1.2"
# Create and start emulator
  # For a full list of android targets, run "android list targets"
  - android list targets
  - android list sdk -a -e
  - echo no | android create avd --force -n test -t android-$ANDROID_API --abi $ANDROID_ABI
  - emulator -memory 1536 -avd test -no-window &
  - travis_wait 10 android-wait-for-emulator
  - adb shell input keyevent 82 &

  # Create gradle.properties with secret stroke password:
  - cd ${CI_HOME}
  - echo "keyStorePassword=$KEY_STROKE_PASSWORD" > gradle.properties
  - echo "reportsUser=\"$REPORTS_USER\"" >> gradle.properties
  - echo "reportsPassword=\"$REPORTS_PASSWORD\"" >> gradle.properties
  - echo "googleAppId=\"$GOOGLE_APP_ID\"" >> gradle.properties
  - echo "googleApiKey=\"$GOOGLE_API_KEY\"" >> gradle.properties
  #Download rando.keystore:
  - lftp "sftp://travis:$APK_UPLOAD_PASS@rando4.me" -e "get rando.keystore; ; bye";
  - mv rando.keystore $HOME/.android/

script:
  - gradle connectedAndroidTest coveralls --stacktrace

after_success:
  - if [ $NEED_UPLOAD_APK ]; then gradle assembleRelease; fi
  - if [ $NEED_UPLOAD_APK ]; then lftp "sftp://travis:$APK_UPLOAD_PASS@rando4.me" -e "put build/outputs/apk/Rando-android-release.apk; bye"; fi

after_failure:
  - sudo apt-get install -qq pandoc
  - pandoc /home/travis/build/RandoApp/Rando-android/build/reports/androidTests/connected/index.html -t plain | sed -n '/^Failed tests/,/default-package/p'
