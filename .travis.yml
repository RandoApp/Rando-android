language: java
jdk: oraclejdk7
# Not working for public repositories :(
cache:
  - apt
  - directories:
    - $HOME/.m2
    - $HOME/downloads
env:
  matrix:
    - ANDROID_SDKS=android-19,sysimg-19 ANDROID_TARGET=android-19 ANDROID_ABI=armeabi-v7a REPO="RandoApp/Rando-android" CI_HOME=$PWD/$REPO DOWNLOADS_HOME=downloads NEED_UPLOAD_APK=true
    - ANDROID_SDKS=android-18,sysimg-18 ANDROID_TARGET=android-18 ANDROID_ABI=armeabi-v7a REPO="RandoApp/Rando-android" CI_HOME=$PWD/$REPO DOWNLOADS_HOME=downloads
    - ANDROID_SDKS=android-10 ANDROID_TARGET=android-10 ANDROID_ABI=armeabi REPO="RandoApp/Rando-android" CI_HOME=$PWD/$REPO DOWNLOADS_HOME=downloads
  global:
    - secure: PITT+C0Whfpah9ot4quUfU+xO20wKRqTDkwR4OrDUktQ80S54Pi/GWiuCi731XqS4rUd0bBMI+cReudETwnvjSKD0tDtmWT3dsXx7/2qlVx7ljaas7YQhFCuVTAi5RuMg4tL7mi748WC29OgwchlASmQ4L2JwnimhsIRT8SKuUo=
    - secure: KMirqXct1UGxYput93fB+kWJZPbYMnbsG3T5/ORa2JNZr7QcAJcYPiS82swAqIqj57xc/7ZvRy5V/DWCoKOnv69iob06rq5kqdM0wHo9glUJn7Xqlbyl0JsmkYNU3ZtCJL4wGP8i5lhhwwBRGW4zVffNqT/FCTGfJplZnuJbu14=

before_install:
  # Install lftp for apk upload:
  - sudo apt-get update -qq
  - sudo apt-get install -qq lftp

  # Download necessary libs, that under of any repository:
  - wget http://cool-project.com/foodex/espresso-1.1.jar -P libs/
  - wget http://cool-project.com/foodex/testrunner-1.1.jar -P libs/
  - wget http://cool-project.com/foodex/testrunner-runtime-1.1.jar -P libs/
  - wget http://cool-project.com/foodex/hamcrest-integration-1.1.jar -P libs/
  - wget http://cool-project.com/foodex/hamcrest-library-1.1.jar -P libs/

  # Install base Android SDK
  - cd ${HOME}
  - if [ ! -f $DOWNLOADS_HOME ]; then mkdir $DOWNLOADS_HOME; fi
  - sudo apt-get update -qq
  - cd $DOWNLOADS_HOME
  #check what do we have in downloads folder
  - if [ `uname -m` = x86_64 ]; then sudo apt-get install -qq --force-yes libgd2-xpm ia32-libs ia32-libs-multiarch > /dev/null; fi
  - if [ ! -f android-sdk_r22.3-linux.tgz ]; then wget http://dl.google.com/android/android-sdk_r22.3-linux.tgz > /dev/null; fi
  - tar xzf android-sdk_r22.3-linux.tgz >/dev/null 2>&1
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools

  # Install Gradle
  - if [ ! -f gradle-1.11-bin.zip ]; then  wget http://services.gradle.org/distributions/gradle-1.11-bin.zip > /dev/null; fi
  - unzip gradle-1.11-bin.zip
  - export GRADLE_HOME=$PWD/gradle-1.11
  - export PATH=$GRADLE_HOME/bin:$PATH

  # Install android build tools
  - if [ ! -f build-tools_r19.0.3-linux.zip ]; then wget https://dl-ssl.google.com/android/repository/build-tools_r19.0.3-linux.zip > /dev/null; fi
  - unzip build-tools_r19.0.3-linux.zip -d $ANDROID_HOME
  - mkdir -p $ANDROID_HOME/build-tools/
  - mv $ANDROID_HOME/android-4.4.2 $ANDROID_HOME/build-tools/19.0.3
  - if [ ! -f build-tools_r19-linux.zip ]; then wget https://dl-ssl.google.com/android/repository/build-tools_r19-linux.zip > /dev/null; fi
  - unzip build-tools_r19-linux.zip -d $ANDROID_HOME
  - mkdir -p $ANDROID_HOME/build-tools/
  - mv $ANDROID_HOME/android-4.4 $ANDROID_HOME/build-tools/19.0.0
  - if [ ! -f build-tools_r17-linux.zip ]; then wget https://dl-ssl.google.com/android/repository/build-tools_r17-linux.zip > /dev/null; fi
  - unzip build-tools_r17-linux.zip -d $ANDROID_HOME
  - mkdir -p $ANDROID_HOME/build-tools/
  - mv $ANDROID_HOME/android-4.2.2 $ANDROID_HOME/build-tools/17.0.0

  # Create settings.gradle. Need for modules correct build
  - cd ${CI_HOME}
  - cd ..
  - echo "include ':Rando-android:modules:facebook:facebook', ':Rando-android:modules:volley', ':Rando-android:modules:two-way-gridview:lib', ':Rando-android'" > settings.gradle

  # Create gradle.properties with secret stroke password:
  - echo "keyStorePassword=$KEY_STROKE_PASSWORD" > Rando-android/gradle.properties

  #Download rando.keystore:
  - lftp "sftp://travis:$APK_UPLOAD_PASS@95.85.19.94" -e "get rando.keystore; ; bye";
  - mkdir $HOME/.android
  - mv rando.keystore $HOME/.android/

  # Install required components.
  # For a full list, run `android list sdk -a --extended`
  # Note that sysimg-19 downloads the ARM, x86 and MIPS images (we should optimize this).
  - echo yes | android update sdk --filter platform-tools --no-ui --force > /dev/null
  - echo yes | android update sdk --filter android-19 --no-ui --force > /dev/null
  - echo yes | android update sdk --filter android-17 --no-ui --force > /dev/null
  - echo yes | android update sdk --filter $ANDROID_SDKS --all --no-ui --force > /dev/null
  - echo yes | android update sdk --filter extra-android-support --no-ui --force > /dev/null
  - echo yes | android update sdk --filter extra-android-m2repository --no-ui --force > /dev/null
  - echo yes | android update sdk --filter extra-google-m2repository --no-ui --force > /dev/null
  - echo yes | android update sdk --filter extra-google-google_play_services --no-ui --force > /dev/null

  # Create and start emulator
  - echo no | android create avd --force -n test -t $ANDROID_TARGET --abi $ANDROID_ABI
  - emulator -avd test -no-skin -no-audio -no-window &

before_script:
  - chmod +x Rando-android/ci/wait_for_emulator.sh
  - Rando-android/ci/wait_for_emulator.sh
  - adb shell input keyevent 82 &

script:
  - gradle connectedAndroidTest --stacktrace
  - gradle assembleRelease

after_script:
    - if [ $NEED_UPLOAD_APK ]; then lftp "sftp://travis:$APK_UPLOAD_PASS@95.85.19.94" -e "put Rando-android/build/apk/rando-android-release.apk; bye"; fi

